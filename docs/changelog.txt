== nervtech release v1.0.0 - ??? ==

- Initial commit of sgtCore.
- Built sgtCore library.
- Added nervMBP project.
- Added test for sgtcore library.
- Adding test for nervMBP.
- Added CUDA files for nervMBP library.
- Adding source file for oct_train_bp.
- Added content from nervtrade project.
- Adding test support for train_bp.
- Large refactoring now using Octave 3.8.2-mingw version to get the nervMBP loading properly with GetProcAddress
- Getting ready to continue...
- Fixed issue with RMS validation computation.
- Updated script files to handle x64 versions.
- Updated ignore file.
- Added implementation for show_cuda_info plugin.
- Added initial profile info for current nnCostFunction implementation.
- Implementing nn_cost_function cpp method.
- Completed initial cpp implementation of nn_cost_function.
- Micro optimizations on nn_coost_function.
- Added initial nervCUDA module.
- Added CUDA matrix multiplication implementation.
- Added support for matrix transpose operation.
- Updating cost_function_cuda implementation.
- Using tpB multMat version.
- Added implementation for tpA support in mult mat.
- Trying to avoid shared memory bank conflicts.
- Working on compute_activation kernel.
- Validated computation of activation and inputs in kernel.
- Moved cudaDeviceReset call in nervcuda test.
- Working implementation of compute_activation with no activation array.
- Cleaning code
- Using input values computed on GPU in nn_cost_function_cuda.
- Cleaned code in nn_cost_function_cuda.
- Added support for cost J computation on GPU.
- Preparing computation of deltas and gradients on GPU.
- Preparing test on deltas computation.
- Tested computation of delta matrices.
- Working on gradient computation tests.